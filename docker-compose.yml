services:
  backend:
    build:
      context: ./be
      dockerfile: Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      elasticsearch:
        condition: service_started
      minio:
        condition: service_started
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${MYSQL_DATABASE}?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQL8Dialect
      - KAFKA_SERVERS=kafka:9092
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - MINIO_URL=http://${HOSTNAME}:${MINIO_API_PORT}
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
    networks:
      - july

  frontend:
    build:
      context: ./fe
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "80:80"
    restart: always
    environment:
      - DOMAIN=api.julytus.local julytus
      - VIRTUAL_HOST=api.julytus.local
      - VIRTUAL_PORT=80
    extra_hosts:
      - "api.julytus.local:host-gateway"
      - "julytus:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - backend
    networks:
      - july
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  #Minio
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "${MINIO_API_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_SERVER_URL: "http://${HOSTNAME}:${MINIO_API_PORT}"
      MINIO_BROWSER_REDIRECT_URL: "http://${HOSTNAME}:${MINIO_CONSOLE_PORT}"
    volumes:
      - ./volumes/minio_data:/data
    command: server --console-address ":9001" /data
    networks:
      - july

  #Redis
  redis:
    image: docker.io/redis:7.2.3
    container_name: redis
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./volumes/redis-data:/data
    networks:
      - july

  kafka:
    image: bitnami/kafka:3.7.0
    container_name: kafka
    hostname: kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - july

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - ./volumes/elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - july

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - july

  mysql:
    image: mysql:8.1.0
    container_name: mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_ROOT_HOST: "%"
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - july

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ""
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - july
volumes:
  elasticsearch_data:
    name: elasticsearch
  minio_data:
    name: minio


networks:
  july:
    driver: bridge